/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.Consultas;
import static GUI.VistaConsultas.buildTableModel;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Javier
 */
public class VistaTablasBD extends javax.swing.JFrame {
    public Consultas consulta;
    public String consultaSQL;
    public ResultSet rs;
    public Consultas getConsulta() {
        return consulta;
    }
    public void setConsulta(Consultas consulta) {
        this.consulta = consulta;
    }
    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        /*
        * En la metaData se pueden obtener valores, como el nombre de las columnas */
        ResultSetMetaData metaData = rs.getMetaData();
        // Nombre de las columnas
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for(int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }
        // Datos de la tabla
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while(rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for(int columnIndex = 1; columnIndex <= columnCount; columnIndex++){
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }
        return new DefaultTableModel(data, columnNames);
    }
    /**
     * Creates new form VistaTablasBD
     */
    public VistaTablasBD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        tours = new javax.swing.JButton();
        jornadas = new javax.swing.JButton();
        enfermedades = new javax.swing.JButton();
        regiones = new javax.swing.JButton();
        ciudades = new javax.swing.JButton();
        turistas = new javax.swing.JButton();
        empresas = new javax.swing.JButton();
        vehiculos = new javax.swing.JButton();
        arriendos = new javax.swing.JButton();
        lugares = new javax.swing.JButton();
        vehiculosRequeridos = new javax.swing.JButton();
        visitas = new javax.swing.JButton();
        turistasEnfermos = new javax.swing.JButton();
        categorias = new javax.swing.JButton();
        guias = new javax.swing.JButton();
        staffGuias = new javax.swing.JButton();
        especialidades = new javax.swing.JButton();
        especialidadesGuias = new javax.swing.JButton();
        totalTuristas = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setViewportView(tabla);

        tours.setText("Tours");
        tours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toursActionPerformed(evt);
            }
        });

        jornadas.setText("Jornadas");
        jornadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornadasActionPerformed(evt);
            }
        });

        enfermedades.setText("Enfermedades");
        enfermedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enfermedadesActionPerformed(evt);
            }
        });

        regiones.setText("Regiones");
        regiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regionesActionPerformed(evt);
            }
        });

        ciudades.setText("Ciudades");
        ciudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciudadesActionPerformed(evt);
            }
        });

        turistas.setText("Turistas");
        turistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turistasActionPerformed(evt);
            }
        });

        empresas.setText("Empresas de arriendos");
        empresas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresasActionPerformed(evt);
            }
        });

        vehiculos.setText("Vehículos");
        vehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiculosActionPerformed(evt);
            }
        });

        arriendos.setText("Arriendos");
        arriendos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arriendosActionPerformed(evt);
            }
        });

        lugares.setText("Lugares");
        lugares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lugaresActionPerformed(evt);
            }
        });

        vehiculosRequeridos.setText("Vehículos requeridos por Tours");
        vehiculosRequeridos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiculosRequeridosActionPerformed(evt);
            }
        });

        visitas.setText("Visitas");
        visitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitasActionPerformed(evt);
            }
        });

        turistasEnfermos.setText("Turistas con enfermedades");
        turistasEnfermos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turistasEnfermosActionPerformed(evt);
            }
        });

        categorias.setText("Categorías de Guías");
        categorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriasActionPerformed(evt);
            }
        });

        guias.setText("Guías");
        guias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiasActionPerformed(evt);
            }
        });

        staffGuias.setText("Staff de Guías en Tours");
        staffGuias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffGuiasActionPerformed(evt);
            }
        });

        especialidades.setText("Especialidades");
        especialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especialidadesActionPerformed(evt);
            }
        });

        especialidadesGuias.setText("Especialidades de Guías");
        especialidadesGuias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especialidadesGuiasActionPerformed(evt);
            }
        });

        totalTuristas.setText("Q4 - Total Turistas");
        totalTuristas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTuristasActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Q1 - Sin Descuento");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Q3 - Total Coordinadores");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Q5.1 - Total Vehiculos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Q5.2 - Total Arriendos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Q2.1 - Valores Tours");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Q2.2 - Tour Descuentos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(regiones)
                                    .addComponent(ciudades)
                                    .addComponent(guias)
                                    .addComponent(turistas))
                                .addGap(147, 147, 147)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categorias)
                                    .addComponent(visitas)
                                    .addComponent(lugares)
                                    .addComponent(turistasEnfermos)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tours)
                                    .addComponent(jornadas)
                                    .addComponent(enfermedades)
                                    .addComponent(vehiculosRequeridos)
                                    .addComponent(especialidadesGuias)
                                    .addComponent(especialidades)
                                    .addComponent(staffGuias))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(empresas)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(arriendos)
                                            .addComponent(vehiculos))
                                        .addGap(78, 78, 78)))
                                .addGap(24, 24, 24)))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jToggleButton1)
                            .addComponent(jButton1)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(totalTuristas)
                                    .addComponent(jToggleButton2))
                                .addGap(2, 2, 2))
                            .addComponent(jButton2))
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tours)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jornadas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enfermedades))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empresas)
                            .addComponent(jToggleButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(vehiculos)
                                    .addComponent(jButton3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arriendos))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jButton4)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(regiones)
                        .addGap(8, 8, 8)
                        .addComponent(ciudades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(turistas))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lugares)
                            .addComponent(jToggleButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(visitas)
                            .addComponent(totalTuristas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(turistasEnfermos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categorias))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(staffGuias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(especialidades)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(especialidadesGuias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vehiculosRequeridos))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toursActionPerformed
        consultaSQL = "select * from tour";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_toursActionPerformed

    private void visitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitasActionPerformed
        consultaSQL = "select * from visita";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_visitasActionPerformed

    private void turistasEnfermosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turistasEnfermosActionPerformed
        consultaSQL = "select * from padecen";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_turistasEnfermosActionPerformed

    private void jornadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornadasActionPerformed
        consultaSQL = "select * from jornada order by código_tour";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jornadasActionPerformed

    private void enfermedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enfermedadesActionPerformed
        consultaSQL = "select * from enfermedades";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_enfermedadesActionPerformed

    private void regionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regionesActionPerformed
        consultaSQL = "select * from región";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_regionesActionPerformed

    private void ciudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciudadesActionPerformed
        consultaSQL = "select * from ciudad";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_ciudadesActionPerformed

    private void guiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guiasActionPerformed
        consultaSQL = "select * from guía";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_guiasActionPerformed

    private void turistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turistasActionPerformed
        consultaSQL = "select * from turistas";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_turistasActionPerformed

    private void staffGuiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffGuiasActionPerformed
        consultaSQL = "select * from dirigen";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_staffGuiasActionPerformed

    private void especialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especialidadesActionPerformed
        consultaSQL = "select * from especialidad";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_especialidadesActionPerformed

    private void especialidadesGuiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especialidadesGuiasActionPerformed
        consultaSQL = "select * from ejerce";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_especialidadesGuiasActionPerformed

    private void empresasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empresasActionPerformed
        consultaSQL = "select * from empresa_arriendo";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_empresasActionPerformed

    private void vehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiculosActionPerformed
        consultaSQL = "select * from vehículo";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_vehiculosActionPerformed

    private void arriendosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arriendosActionPerformed
        consultaSQL = "select * from arriendo";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_arriendosActionPerformed

    private void lugaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lugaresActionPerformed
        consultaSQL = "select * from lugar";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_lugaresActionPerformed

    private void categoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriasActionPerformed
        consultaSQL = "select * from categoría";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_categoriasActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void vehiculosRequeridosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiculosRequeridosActionPerformed
        consultaSQL = "select * from requieren";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_vehiculosRequeridosActionPerformed

    private void totalTuristasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTuristasActionPerformed
        consultaSQL = "select * from total_turistas";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_totalTuristasActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        consultaSQL = "select * from regiones_sindescuento";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        consultaSQL = "select * from total_coordinadores";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        consultaSQL = "select * from total_vehiculo";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        consultaSQL = "select * from total_arriendos";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        consultaSQL = "select * from valores_tours";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        consultaSQL = "select * from tour_descuentos";
        try {
            rs = consulta.hacerConsulta(consultaSQL);
            DefaultTableModel modelo = buildTableModel(rs);
            tabla.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar. " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaTablasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaTablasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaTablasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaTablasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaTablasBD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arriendos;
    private javax.swing.JButton categorias;
    private javax.swing.JButton ciudades;
    private javax.swing.JButton empresas;
    private javax.swing.JButton enfermedades;
    private javax.swing.JButton especialidades;
    private javax.swing.JButton especialidadesGuias;
    private javax.swing.JButton guias;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JButton jornadas;
    private javax.swing.JButton lugares;
    private javax.swing.JButton regiones;
    private javax.swing.JButton staffGuias;
    private javax.swing.JTable tabla;
    private javax.swing.JToggleButton totalTuristas;
    private javax.swing.JButton tours;
    private javax.swing.JButton turistas;
    private javax.swing.JButton turistasEnfermos;
    private javax.swing.JButton vehiculos;
    private javax.swing.JButton vehiculosRequeridos;
    private javax.swing.JButton visitas;
    // End of variables declaration//GEN-END:variables
}
